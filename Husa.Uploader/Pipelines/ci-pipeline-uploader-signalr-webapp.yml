pr:
  branches:
    include:
    - develop
    - release/*
    - hotfix/*
    - master
  paths:
    include:
      - Husa.Uploader/Husa.Uploader.SignalR.WebApp

trigger:
  branches:
    include:
    - develop
    - release/*
    - hotfix/*
    - master
  paths:
    include:
      - Husa.Uploader/Husa.Uploader.SignalR.WebApp

pool:
  vmImage: windows-latest

variables:
- name: isPullRequest
  value: $[eq(variables['Build.Reason'], 'PullRequest')]

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/Husa.Uploader/Husa.Uploader.SignalR.WebApp/Husa.Uploader.SignalR.WebApp.csproj'
    restoreArguments: '/property:Configuration=Release'
    feedsToUse: 'select'
    vstsFeed: 'f820f957-6781-4cd6-b5f5-e720c189507f/891ce0ed-37b7-4336-b1fe-079c0525a171'
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/Husa.Uploader/Husa.Uploader.SignalR.WebApp/Husa.Uploader.SignalR.WebApp.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  condition: ne(variables.isPullRequest, true)
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Husa.Uploader/Husa.Uploader.SignalR.WebApp/Husa.Uploader.SignalR.WebApp.csproj'
    arguments: '--configuration Release --output $(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  condition: and(succeededOrFailed(), ne(variables.isPullRequest, true))
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'